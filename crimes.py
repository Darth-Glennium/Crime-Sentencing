# -*- coding: utf-8 -*-
"""Crimes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MIrvWWsyv2s_D4pBojtgTfqsGb422A5q
"""

pip install dash plotly

import dash
import plotly.graph_objects as go
from dash import dcc, html
from dash.dependencies import Input, Output

# Crime data dictionary with definitions, sentences, and statistics
crime_data = {
    "Theft": {
        "sentence": "Up to 3 years imprisonment or fine.",
        "statistics": {
            "reported_cases_2023": 10000,
            "conviction_rate": 0.8,
            "recidivism_rate": 0.2,
            "probability_of_winning": 0.75,  # Probability of winning in court
            "trends": "Decreasing by 5% annually"
        },
        "description": "The unlawful taking of someone's property with intent to permanently deprive them of it."
    },
    "Murder": {
        "sentence": "Life imprisonment or death penalty (depending on the severity).",
        "statistics": {
            "reported_cases_2023": 500,
            "conviction_rate": 0.75,
            "recidivism_rate": 0,
            "probability_of_winning": 0.85,  # Probability of winning in court
            "trends": "Stable, no significant increase or decrease"
        },
        "description": "The unlawful premeditated killing of one human being by another."
    },
    "Assault": {
        "sentence": "Imprisonment for up to 5 years, depending on the severity.",
        "statistics": {
            "reported_cases_2023": 2000,
            "conviction_rate": 0.65,
            "recidivism_rate": 0.15,
            "probability_of_winning": 0.7,  # Probability of winning in court
            "trends": "Increasing slightly year-on-year"
        },
        "description": "The intentional infliction of bodily harm or the threat of harm upon another person."
    },
    "Domestic Violence": {
        "sentence": "Imprisonment for up to 10 years, depending on severity.",
        "statistics": {
            "reported_cases_2023": 7000,
            "conviction_rate": 0.7,
            "recidivism_rate": 0.25,
            "probability_of_winning": 0.68,  # Probability of winning in court
            "trends": "Rising steadily in recent years"
        },
        "description": "Physical, psychological, or emotional abuse by a family member against another."
    },
    "Drug Offenses": {
        "sentence": "Imprisonment ranging from 5 years to life, depending on the offense.",
        "statistics": {
            "reported_cases_2023": 3000,
            "conviction_rate": 0.85,
            "recidivism_rate": 0.3,
            "probability_of_winning": 0.9,  # Probability of winning in court
            "trends": "Increasing, especially in urban areas"
        },
        "description": "Crimes related to the possession, trafficking, or manufacturing of illegal drugs."
    },
    "Corruption": {
        "sentence": "Imprisonment, often with financial penalties.",
        "statistics": {
            "reported_cases_2023": 1000,
            "conviction_rate": 0.5,
            "recidivism_rate": 0,
            "probability_of_winning": 0.6,  # Probability of winning in court
            "trends": "Moderate decrease due to increased anti-corruption measures"
        },
        "description": "The abuse of power for personal gain, including bribery and embezzlement."
    },
    "Robbery": {
        "sentence": "Imprisonment for a term not exceeding 14 years.",
        "statistics": {
            "reported_cases_2023": 4000,
            "conviction_rate": 0.6,
            "recidivism_rate": 0.25,
            "probability_of_winning": 0.72,  # Probability of winning in court
            "trends": "Stable but still concerning"
        },
        "description": "The act of taking property from another person by force or threat of force."
    },
    "Rape": {
        "sentence": "Life imprisonment or death penalty (depending on the severity).",
        "statistics": {
            "reported_cases_2023": 1500,
            "conviction_rate": 0.5,
            "recidivism_rate": 0,
            "probability_of_winning": 0.4,  # Probability of winning in court
            "trends": "High and increasing awareness, but still high occurrence"
        },
        "description": "Non-consensual sexual intercourse, typically involving force or threat."
    }
}

# Initialize Dash app
app = dash.Dash(__name__)

# Layout of the app
app.layout = html.Div(style={"fontFamily": "Arial, sans-serif", "backgroundColor": "#f9f9f9", "padding": "20px"}, children=[
    html.H1("Kenyan Crime Sentences and Statistics", style={"color": "#2c3e50", "textAlign": "center", "fontSize": "36px", "marginBottom": "20px"}),

    # Dropdown for crime selection
    dcc.Dropdown(
        id='crime-dropdown',
        options=[{'label': crime, 'value': crime} for crime in crime_data],
        placeholder="Select a crime",
        style={'width': '50%', 'margin': '0 auto', 'display': 'block', 'padding': '10px', 'fontSize': '18px'}
    ),

    # Area to display crime info
    html.Div(id='crime-info', style={"marginTop": "30px"})
])

# Callback to update crime information
@app.callback(
    Output('crime-info', 'children'),
    [Input('crime-dropdown', 'value')]
)
def update_crime_info(crime):
    if crime:
        data = crime_data[crime]
        sentence = data["sentence"]
        stats = data["statistics"]
        description = data["description"]

        # Create Pie charts for statistics
        conviction_pie = go.Figure(data=[go.Pie(
            labels=['Convicted', 'Not Convicted'],
            values=[stats["conviction_rate"] * 100, (1 - stats["conviction_rate"]) * 100],
            hole=0.3,
            textinfo="label+percent",
            title="Conviction Rate",
            marker=dict(colors=['#4caf50', '#e57373'])
        )])

        recidivism_pie = go.Figure(data=[go.Pie(
            labels=['Re-offended', 'Not Re-offended'],
            values=[stats["recidivism_rate"] * 100, (1 - stats["recidivism_rate"]) * 100],
            hole=0.3,
            textinfo="label+percent",
            title="Recidivism Rate",
            marker=dict(colors=['#ff9800', '#2196f3'])
        )])

        win_pie = go.Figure(data=[go.Pie(
            labels=['Win', 'Lose'],
            values=[stats["probability_of_winning"] * 100, (1 - stats["probability_of_winning"]) * 100],
            hole=0.3,
            textinfo="label+percent",
            title="Probability of Winning in Court",
            marker=dict(colors=['#8bc34a', '#f44336'])
        )])

        # Display crime info along with charts
        return html.Div([
            html.Div([
                html.H3(f"Crime: {crime}", style={"color": "#2c3e50", "textAlign": "center"}),
                html.P(f"Description: {description}", style={"color": "#7f8c8d", "fontSize": "18px", "textAlign": "center"}),
                html.P(f"Sentence: {sentence}", style={"color": "#2c3e50", "fontSize": "18px", "textAlign": "center", "marginTop": "20px"}),
            ], style={"textAlign": "center", "padding": "20px"}),

            # Display statistics in a grid layout
            html.Div([
                html.Div([dcc.Graph(figure=conviction_pie)], style={'width': '30%', 'display': 'inline-block'}),
                html.Div([dcc.Graph(figure=recidivism_pie)], style={'width': '30%', 'display': 'inline-block'}),
                html.Div([dcc.Graph(figure=win_pie)], style={'width': '30%', 'display': 'inline-block'}),
            ], style={"textAlign": "center", "marginTop": "40px"})
        ])

    return html.Div()

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)